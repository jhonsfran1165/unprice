name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize]

env:
  SKIP_ENV_VALIDATION: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-lint:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    uses: ./.github/workflows/job_build.yaml

  ci-preview-tinybird:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    uses: ./.github/workflows/job_tinybird_ci.yml
    needs:
      - build-lint

  deploy-preview-neon:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest

    outputs:
      db_branch_name: ${{ steps.db-branch.outputs.out }}
      db_url: ${{ steps.db-url.outputs.out }}

    needs:
      - build-lint

    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: Infisical/secrets-action@v1.0.7
        name: Pull secrets from Infisical
        with:
          client-id: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
          env-slug: "preview"
          project-slug: "unprice-zq-xm"
          secret-path: "/ci"
          recursive: true

      - uses: ./.github/actions/install
        name: Install dependencies
        with:
          ts: "true"
          python: "false"

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          parent: main
          branch_name: preview/pr-${{ steps.branch-name.outputs.current_branch }}
          database: ${{ env.NEON_DATABASE_NAME }}
          api_key: ${{ env.NEON_API_KEY }}
          username: ${{ env.NEON_DATABASE_USERNAME }}

      - name: Run Migrations
        working-directory: internal/db
        run: |
          pnpm generate
          pnpm migrate:custom
        env:
          VERCEL_ENV: preview
          NODE_ENV: development
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}

      - name: commit migrations
        working-directory: internal/db
        run: |
          if [ -n "$(git status --porcelain ./)" ]; then
            echo "Changes detected in db folder, committing..."
            git config --global user.email "unprice-bot@unprice.com"
            git config --global user.name "Unprice Bot"
            git add .
            git commit -m "chore: migrations for preview [skip ci]"
            git push --set-upstream origin ${{ steps.branch-name.outputs.current_branch }}
          else
            echo "No changes detected in db folder, skipping commit"
          fi

      - name: Schema Diff
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          base_branch: main
          compare_branch: preview/pr-${{ steps.branch-name.outputs.current_branch }}
          username: ${{ env.NEON_DATABASE_USERNAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          api_key: ${{ env.NEON_API_KEY }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: db-url
        with:
          ## PASSWORD is a gpg passphrase stored in Github Secrets.
          secret: ${{ secrets.PASSWORD_ENCRYPT }}
          op: encode
          in: ${{ steps.create-branch.outputs.db_url_with_pooler }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: db-branch
        with:
          ## PASSWORD is a gpg passphrase stored in Github Secrets.
          secret: ${{ secrets.PASSWORD_ENCRYPT }}
          op: encode
          in: ${{ steps.branch-name.outputs.current_branch }}

  deploy-preview-tinybird:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    uses: ./.github/workflows/job_tinybird_cd.yml
    needs:
      - deploy-preview-neon
      - ci-preview-tinybird
    secrets: inherit
    with:
      env: "preview"

  deploy-preview-api:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    needs:
      - deploy-preview-neon
      - deploy-preview-tinybird

    uses: ./.github/workflows/job_deploy_api.yaml
    secrets:
      DATABASE_URL_ENCRYPTED: ${{ needs.deploy-preview-neon.outputs.db_url }}
      PASSWORD_ENCRYPT: ${{ secrets.PASSWORD_ENCRYPT }}
      MACHINE_IDENTITY_CLIENT_ID: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
      MACHINE_IDENTITY_CLIENT_SECRET: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
    with:
      env: "preview"

  deploy-auth-preview-vercel:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest

    needs:
      - deploy-preview-neon
      - deploy-preview-tinybird

    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: cloudposse/github-action-secret-outputs@main
        id: db-url
        with:
          ## PASSWORD is a gpg passphrase stored in Github Secrets.
          secret: ${{ secrets.PASSWORD_ENCRYPT }}
          op: decode
          in: ${{ needs.deploy-preview-neon.outputs.db_url }}

      - uses: Infisical/secrets-action@v1.0.7
        name: Pull secrets from Infisical
        with:
          client-id: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
          env-slug: "preview"
          project-slug: "unprice-zq-xm"
          export-type: "file"
          file-output-path: "/.env"
          secret-path: "/"
          recursive: true

      - uses: ./.github/actions/install
        with:
          ts: "true"
          python: "false"

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: '.env'
          export: true
          # export everything except DATABASE_URL using regex
          filter: ^(?!DATABASE_URL$).*$
          mask: true

      - name: Check for changes
        id: turbo-ignore
        continue-on-error: true
        run: npx turbo-ignore -d apps/auth-proxy

      - uses: amondnet/vercel-action@v41.1.4 #deploy
        name: Deploy Unprice auth to Vercel
        id: deploy-auth
        # if turbo-ignore fails,that means there are no changes in the auth-proxy folder
        if: steps.turbo-ignore.outcome == 'failure'
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ env.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ env.VERCEL_PROJECT_AUTH_UNPRICE_ID }} #Required
          # always prod because the auth proxy link has to be stable
          vercel-args: '--prod --env VERCEL_ENV=production --env NODE_ENV=production --build-env NODE_ENV=production'
          working-directory: ./

  deploy-app-preview-vercel:
    if: ${{ !contains(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest

    needs:
      - deploy-preview-neon
      - deploy-preview-tinybird

    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: cloudposse/github-action-secret-outputs@main
        id: db-url
        with:
          ## PASSWORD is a gpg passphrase stored in Github Secrets.
          secret: ${{ secrets.PASSWORD_ENCRYPT }}
          op: decode
          in: ${{ needs.deploy-preview-neon.outputs.db_url }}

      - uses: Infisical/secrets-action@v1.0.7
        name: Pull secrets from Infisical
        with:
          client-id: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
          env-slug: "preview"
          project-slug: "unprice-zq-xm"
          export-type: "file"
          file-output-path: "/.env"
          secret-path: "/"
          recursive: true

      - uses: ./.github/actions/install
        with:
          ts: "true"
          python: "false"

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: '.env'
          export: true
          # export everything except DATABASE_URL using regex
          filter: ^(?!DATABASE_URL$).*$
          mask: true

      - name: Check for changes
        id: turbo-ignore
        continue-on-error: true
        run: npx turbo-ignore -d apps/auth-proxy

      # deploy preview unprice to vercel
      - uses: amondnet/vercel-action@v41.1.4 #deploy
        name: Deploy Preview Unprice to Vercel
        id: deploy-unprice
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ env.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ env.VERCEL_PROJECT_UNPRICE_ID}} #Required
          working-directory: ./
          vercel-args: '--env VERCEL_ENV=preview --env NODE_ENV=preview --env DATABASE_URL=${{ steps.db-url.outputs.out }} --env NEXT_PUBLIC_APP_DOMAIN=pr-${{ github.event.number }}-unprice.vercel.app --env NEXT_PUBLIC_VERCEL_ENV=preview --build-env VERCEL_ENV=preview --build-env NODE_ENV=preview --build-env DATABASE_URL=${{ steps.db-url.outputs.out }} --build-env NEXT_PUBLIC_APP_DOMAIN=pr-${{ github.event.number }}-unprice.vercel.app --build-env NEXT_PUBLIC_VERCEL_ENV=preview'
          alias-domains: |
            pr-${{ github.event.number }}-unprice.vercel.app
            app-pr-${{ github.event.number }}-unprice.vercel.app
            api-pr-${{ github.event.number }}-unprice.vercel.app

TOKEN "web-apps" READ

TAGS "verifications,usage"

NODE day_intervals
SQL >
    %
    WITH
        toStartOfDay(
            toTimeZone(toDateTime64(now() - INTERVAL {{ Int32(intervalDays) }} DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS start,
        toStartOfDay(
            toTimeZone(toDateTime64(now() + INTERVAL 1 DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toStartOfDay(toTimeZone(toDateTime64(x, 3), {{ String(timezone, 'UTC') }})),
                range(toUInt32(toTimeZone(start, 'UTC')), toUInt32(toTimeZone(end, 'UTC')) + 86400, 86400)
            )
        ) as interval


NODE hour_intervals
SQL >
    %
    WITH
        toStartOfHour(
            toTimeZone(toDateTime64(now() - INTERVAL {{ Int32(intervalDays, 1) }} DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS start,
        toStartOfHour(
            toTimeZone(toDateTime64(now() + INTERVAL 1 DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toStartOfHour(toTimeZone(toDateTime64(x, 3), {{ String(timezone, 'UTC') }})),
                range(toUInt32(toTimeZone(start, 'UTC')), toUInt32(toTimeZone(end, 'UTC')) + 3600, 3600)
            )
        ) as interval


NODE feature_verifications_node
SQL >
    %
    SELECT
        {% if Int32(intervalDays) == 1 %}
            toStartOfHour(toTimeZone(date, {{ String(timezone, 'UTC') }})) as interval,
        {% else %}
            toStartOfDay(toTimeZone(date, {{ String(timezone, 'UTC') }})) as interval,
        {% end %}
        projectId,
        countMerge(count) AS count,
        quantileTDigestMerge(0.99)(p99_latency) AS p99_latency
    FROM unprice_feature_verifications_hourly_mv
    WHERE
        {% if defined(projectId) %}
            projectId = {{ String(projectId) }} AND
        {% end %}
        {% if defined(intervalDays) %}
            date >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL {{ Int32(intervalDays) }} DAY)
        {% else %}
            date >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL 7 DAY)
        {% end %}
    GROUP BY interval, projectId


NODE feature_usage_total_node
SQL >
    %
    SELECT
        {% if Int32(intervalDays) == 1 %}
            toStartOfHour(toTimeZone(date, {{ String(timezone, 'UTC') }})) as interval,
        {% else %}
            toStartOfDay(toTimeZone(date, {{ String(timezone, 'UTC') }})) as interval,
        {% end %}
        projectId,
        countMerge(count) AS count,
        sumMerge(sum) AS sum
    FROM unprice_feature_usage_hourly_mv
    WHERE
        {% if defined(projectId) %}
            projectId = {{ String(projectId) }} AND
        {% end %}
        {% if defined(intervalDays) %}
            date >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL {{ Int32(intervalDays) }} DAY)
        {% else %}
            date >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL 7 DAY)
        {% end %}
    GROUP BY interval, projectId

NODE feature_overview_node
SQL >
    %
    SELECT
        verifications.interval AS interval,
        coalesce(verifications.projectId, usage.projectId) AS project_id,
        coalesce(verifications.p99_latency, 0) AS latency,
        coalesce(verifications.count, 0) AS verifications,
        coalesce(usage.sum, 0) AS usage
    FROM feature_verifications_node as verifications
    LEFT JOIN feature_usage_total_node as usage ON verifications.interval = usage.interval AND verifications.projectId = usage.projectId


NODE timeserie_feature_overview
SQL >
    %
    SELECT
        formatDateTime(interval, '%FT%T.000%z') as date,
        latency,
        verifications,
        usage
    FROM
        {% if Int32(intervalDays) == 1 %} hour_intervals
        {% else %} day_intervals
        {% end %}
    LEFT JOIN feature_overview_node USING interval

TYPE endpoint

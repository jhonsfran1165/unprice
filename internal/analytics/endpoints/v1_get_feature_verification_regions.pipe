TOKEN "web-apps" READ

TAGS "verifications"


NODE day_intervals
SQL >
    %
    WITH
        toStartOfDay(
            toTimeZone(toDateTime64(now() - INTERVAL {{ Int32(intervalDays) }} DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS start,
        toStartOfDay(
            toTimeZone(toDateTime64(now() + INTERVAL 1 DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toStartOfDay(toTimeZone(toDateTime64(x, 3), {{ String(timezone, 'UTC') }})),
                range(toUInt32(toTimeZone(start, 'UTC')), toUInt32(toTimeZone(end, 'UTC')) + 86400, 86400)
            )
        ) as interval


NODE hour_intervals
SQL >
    %
    WITH
        toStartOfHour(
            toTimeZone(toDateTime64(now() - INTERVAL {{ Int32(intervalDays, 1) }} DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS start,
        toStartOfHour(
            toTimeZone(toDateTime64(now() + INTERVAL 1 DAY, 3), {{ String(timezone, 'UTC') }})
        ) AS end
    SELECT
        arrayJoin(
            arrayMap(
                x -> toStartOfHour(toTimeZone(toDateTime64(x, 3), {{ String(timezone, 'UTC') }})),
                range(toUInt32(toTimeZone(start, 'UTC')), toUInt32(toTimeZone(end, 'UTC')) + 3600, 3600)
            )
        ) as interval


NODE feature_verification_regions_node
SQL >
    %
    SELECT
        {% if Int32(intervalDays) == 1 %}
            toStartOfHour(fromUnixTimestamp64Milli(timestamp, {{ String(timezone, 'UTC') }})) as interval,
        {% else %}
            toStartOfDay(fromUnixTimestamp64Milli(timestamp, {{ String(timezone, 'UTC') }})) as interval,
        {% end %}
        metadata['colo'] AS region,
        count() AS count,
        round(quantile(0.50)(latency), 2) AS p50_latency,
        round(quantile(0.95)(latency), 2) AS p95_latency,
        round(quantile(0.99)(latency), 2) AS p99_latency
    FROM unprice_feature_verifications
    WHERE
        region != '' AND
        projectId = {{ String(projectId) }}
        {% if defined(region) %}
            AND region = {{ String(region) }}
        {% end %}
        {% if defined(intervalDays) %}
            AND fromUnixTimestamp64Milli(timestamp) >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL {{ Int32(intervalDays) }} DAY)
        {% else %}
            AND fromUnixTimestamp64Milli(timestamp) >= toStartOfDay(toTimeZone(now(), {{ String(timezone, 'UTC') }}) - INTERVAL 7 DAY)
        {% end %}
    GROUP BY interval, region
    ORDER BY interval, region


NODE timeserie_feature_verification_regions
SQL >
    %
    SELECT
        formatDateTime(interval, '%FT%T.000%z') as date,
        region,
        count,
        p50_latency,
        p95_latency,
        p99_latency
    FROM
        {% if Int32(intervalDays) == 1 %} hour_intervals
        {% else %} day_intervals
        {% end %}
    LEFT JOIN feature_verification_regions_node USING interval
    WHERE region != ''

TYPE endpoint
